{"mappings":"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","sources":["public/main.js"],"sourcesContent":["let previous = document.querySelector('#pre');\r\nlet play = document.querySelector('#play');\r\nlet next = document.querySelector('#next');\r\nlet title = document.querySelector('#title');\r\nlet slider = document.querySelector('#duration_slider');\r\nlet show_duration = document.querySelector('#show_duration');\r\nlet present = document.querySelector('#present');\r\nlet total = document.querySelector('#total');\r\nlet artist = document.querySelector('#artist');\r\n\r\n\r\n\r\nlet timer;\r\nlet autoplay = 0;\r\n\r\nlet index_no = 0;\r\nlet Playing_song = false;\r\n\r\n//create a audio Element\r\nlet track = document.createElement('audio');\r\n\r\n\r\n//All songs list\r\nlet All_song = [\r\n   {\r\n     name: \"Acoustic\",\r\n     path: \"public/music/song1.mp3\",\r\n   },\r\n   {\r\n     name: \"Memories\",\r\n     path: \"music/song2.mp3\",\r\n   },\r\n   {\r\n     name: \"Better days\",\r\n     path: \"music/song3.mp3\",\r\n   }\r\n];\r\n\r\nconsole.log(All_song);\r\n\r\n\r\n\r\n// All functions\r\n\r\n\r\n// function load the track\r\nfunction load_track(index_no){\r\n\tclearInterval(timer);\r\n\treset_slider();\r\n\r\n\ttrack.src = All_song[index_no].path;\r\n\ttitle.innerHTML = All_song[index_no].name;\t\r\n    track.load();\r\n\r\n\ttimer = setInterval(range_slider ,1000);\r\n\t//total.innerHTML = All_song.length;\r\n\t//present.innerHTML = index_no + 1;\r\n}\r\n\r\nload_track(index_no);\r\n\r\n\r\n//mute sound function\r\n//function mute_sound(){\r\n//\ttrack.volume = 0;\r\n//\tvolume.value = 0;\r\n//\tvolume_show.innerHTML = 0;\r\n//}\r\n\r\n\r\n// checking.. the song is playing or not\r\n function justplay(){\r\n \tif(Playing_song==false){\r\n \t\tplaysong();\r\n\r\n \t}else{\r\n \t\tpausesong();\r\n \t}\r\n }\r\n\r\n\r\n// reset song slider\r\n function reset_slider(){\r\n \tslider.value = 0;\r\n }\r\n\r\n// play song\r\nfunction playsong(){\r\n  track.play();\r\n  Playing_song = true;\r\n  play.innerHTML = '<i class=\"fa fa-pause\" aria-hidden=\"true\"></i>';\r\n}\r\n\r\n//pause song\r\nfunction pausesong(){\r\n\ttrack.pause();\r\n\tPlaying_song = false;\r\n\tplay.innerHTML = '<i class=\"fa fa-play\" aria-hidden=\"true\"></i>';\r\n}\r\n\r\n\r\n// next song\r\nfunction next_song(){\r\n\tif(index_no < All_song.length - 1){\r\n\t\tindex_no += 1;\r\n\t\tload_track(index_no);\r\n\t\tplaysong();\r\n\t}else{\r\n\t\tindex_no = 0;\r\n\t\tload_track(index_no);\r\n\t\tplaysong();\r\n\r\n\t}\r\n}\r\n\r\n\r\n// previous song\r\nfunction previous_song(){\r\n\tif(index_no > 0){\r\n\t\tindex_no -= 1;\r\n\t\tload_track(index_no);\r\n\t\tplaysong();\r\n\r\n\t}else{\r\n\t\tindex_no = All_song.length;\r\n\t\tload_track(index_no);\r\n\t\tplaysong();\r\n\t}\r\n}\r\n\r\n\r\n\r\n// change slider position \r\nfunction change_duration(){\r\n\tslider_position = track.duration * (slider.value / 100);\r\n\ttrack.currentTime = slider_position;\r\n}\r\n\r\n\r\n\r\n\r\nfunction range_slider(){\r\n\tlet position = 0;\r\n        \r\n        // update slider position\r\n\t\tif(!isNaN(track.duration)){\r\n\t\t   position = track.currentTime * (100 / track.duration);\r\n\t\t   slider.value =  position;\r\n\t      }\r\n\r\n       \r\n       // function will run when the song is over\r\n       if(track.ended){\r\n       \t play.innerHTML = '<i class=\"fa fa-play\" aria-hidden=\"true\"></i>';\r\n           if(autoplay==1){\r\n\t\t       index_no += 1;\r\n\t\t       load_track(index_no);\r\n\t\t       playsong();\r\n           }\r\n\t    }\r\n     }\r\n\r\n\r\n//---------------------------------TASK FUNCTION ----------//\r\nfunction newtask() {\r\n\tlet taskname = document.querySelector(\"#taskname\");\r\n\ttaskname.innerHTML= taskname.value;\r\n}\r\n\r\n//-----------------------------DATE-----------------------------?? \r\n\r\nlet btnShow = document.getElementById(\"date-btn\"); \r\nconsole.log(btnShow);\r\nlet output = document.querySelector('h1');\r\nconsole.log(output);\r\n\r\n\r\nbtnShow.addEventListener('click',()=> {\r\n    let today = new Date();\r\n    let month = today.getMonth()+1;\r\n    let year =today.getDate();\r\n    let date = today.getDate();\r\n    console.log('show');\r\n\r\n    let current_date = `${month}/${date}/${year}`;\r\n    output.innerText = current_date;\r\n\r\n    console.log(current_date)\r\n\r\n}) \r\n\r\n\r\nlet todayDate = moment();\r\nconsole.log(todayDate);\r\n\r\nwindow.onSpotifyIframeApiReady = (IFrameAPI) => {\r\n\t// \r\n  };\r\n\r\n  window.onSpotifyIframeApiReady = (IFrameAPI) => {\r\n\tlet element = document.getElementById('embed-iframe');\r\n\tlet options = {\r\n\t\turi: 'spotify:episode:7makk4oTQel546B0PZlDM5'\r\n\t  };\r\n\tlet callback = (EmbedController) => {};\r\n\tIFrameAPI.createController(element, options, callback);\r\n  };\r\n  "],"names":[],"version":3,"file":"plan.5217163c.js.map","sourceRoot":"/__parcel_source_root/"}